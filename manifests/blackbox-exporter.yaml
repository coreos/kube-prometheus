---
# podsecuritypolicy.yaml
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: blackbox-exporter-psp
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  # Prevents running in privileged mode
  privileged: false
  # Required to prevent escalations to root.
  allowPrivilegeEscalation: false
  volumes:
    - configMap
    - secret
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: RunAsAny
  seLinux:
    rule: RunAsAny
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      # Forbid adding the root group.
      - min: 1
        max: 65535
  readOnlyRootFilesystem: true
---
# serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: blackbox-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
  annotations:
    {}
---
# Source https://raw.githubusercontent.com/prometheus/blackbox_exporter/master/blackbox.yml -> configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: blackbox-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
data:
  blackbox.yaml: |
    modules:
      http_2xx:
        prober: http
        timeout: 5s
        http:
          no_follow_redirects: false
          preferred_ip_protocol: ip4
          valid_http_versions:
          - HTTP/1.1
          - HTTP/2
      # POST METHOD
      http_post_2xx:
        prober: http
        http:
          method: POST
      tcp_connect:
        prober: tcp
      pop3s_banner:
        prober: tcp
        tcp:
          query_response:
          - expect: "^+OK"
          tls: true
          tls_config:
            insecure_skip_verify: false
---
# role.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: blackbox-exporter
  name: blackbox-exporter
  namespace: monitoring
rules:
  - apiGroups:
    - policy
    resources:
    - podsecuritypolicies
    resourceNames:
    - blackbox-exporter-psp
    verbs:
    - use
---
# rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: blackbox-exporter
  name: blackbox-exporter
  namespace: monitoring
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: blackbox-exporter
subjects:
  - kind: ServiceAccount
    name: blackbox-exporter
---
# service.yaml
kind: Service
apiVersion: v1
metadata:
  name: blackbox-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 9115
      protocol: TCP
  selector:
    app.kubernetes.io/name: blackbox-exporter
---
# deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: blackbox-exporter
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: blackbox-exporter
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: blackbox-exporter
    spec:
      serviceAccountName: blackbox-exporter

      restartPolicy: Always
      containers:
        - name: blackbox-exporter
          image: "prom/blackbox-exporter:v0.16.0"
          imagePullPolicy: IfNotPresent
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          args:
            - "--config.file=/config/blackbox.yaml"
          resources:
            {}
          ports:
            - containerPort: 9115
              name: http
          livenessProbe:
            httpGet:
              path: /health
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          volumeMounts:
            - mountPath: /config
              name: config
      volumes:
        - name: config
          configMap:
            name: blackbox-exporter
---
# artifactory.stsh.io
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: blackbox-exporter-artifactory
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  endpoints:
  - port: http
    scheme: http
    path: "/probe"
    interval: 60s
    scrapeTimeout: 60s
    params:
      module:
      - http_2xx
      target:
      - http://artifactory.stsh.io/ui/login/
    metricRelabelings:
      - sourceLabels: [__address__]
        targetLabel: __param_target
      - sourceLabels: [__param_target]
        targetLabel: instance
      - targetLabel: target
        replacement: artifactory
  jobLabel: "artifactory"
  selector:
    matchLabels:
      app.kubernetes.io/name: blackbox-exporter
  namespaceSelector:
    matchNames:
      - monitoring
---
# drone.stsh.io
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: blackbox-exporter-drone
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  endpoints:
  - port: http
    scheme: http
    path: "/probe"
    interval: 60s
    scrapeTimeout: 60s
    params:
      module:
      - http_2xx
      target:
      - https://drone.stsh.io/healthz
    metricRelabelings:
      - sourceLabels: [__address__]
        targetLabel: __param_target
      - sourceLabels: [__param_target]
        targetLabel: instance
      - targetLabel: target
        replacement: drone
  jobLabel: "drone"
  selector:
    matchLabels:
      app.kubernetes.io/name: blackbox-exporter
  namespaceSelector:
    matchNames:
      - monitoring
---
# redlobster.stsh.io
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: blackbox-exporter-redlobster
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  endpoints:
  - port: http
    scheme: http
    path: "/probe"
    interval: 60s
    scrapeTimeout: 60s
    params:
      module:
      - http_2xx
      target:
      - https://redlobster.stsh.io/threads
    metricRelabelings:
      - sourceLabels: [__address__]
        targetLabel: __param_target
      - sourceLabels: [__param_target]
        targetLabel: instance
      - targetLabel: target
        replacement: redlobster
  jobLabel: "redlobster"
  selector:
    matchLabels:
      app.kubernetes.io/name: blackbox-exporter
  namespaceSelector:
    matchNames:
      - monitoring
---
# grafana
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: blackbox-exporter-grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  endpoints:
  - port: http
    scheme: http
    path: "/probe"
    interval: 60s
    scrapeTimeout: 60s
    params:
      module:
      - http_2xx
      target:
      - https://graf-ss-dev.stsh.io/login
    metricRelabelings:
      - sourceLabels: [__address__]
        targetLabel: __param_target
      - sourceLabels: [__param_target]
        targetLabel: instance
      - targetLabel: target
        replacement: grafana
  jobLabel: "grafana"
  selector:
    matchLabels:
      app.kubernetes.io/name: blackbox-exporter
  namespaceSelector:
    matchNames:
      - monitoring
---
# spinnaker.stsh.io
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: blackbox-exporter-spinnaker
  namespace: monitoring
  labels:
    app.kubernetes.io/name: blackbox-exporter
spec:
  endpoints:
  - port: http
    scheme: http
    path: "/probe"
    interval: 60s
    scrapeTimeout: 60s
    params:
      module:
      - http_2xx
      target:
      - https://spinnaker.stsh.io/healthz
    metricRelabelings:
      - sourceLabels: [__address__]
        targetLabel: __param_target
      - sourceLabels: [__param_target]
        targetLabel: instance
      - targetLabel: target
        replacement: spinnaker
  jobLabel: "spinnaker"
  selector:
    matchLabels:
      app.kubernetes.io/name: blackbox-exporter 
  namespaceSelector:
    matchNames:
      - monitoring
---
#
# blackbox-exporter-rules
#
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  labels:
    prometheus: k8s
    role: alert-rules
  name: blackbox-exporter-rules
  namespace: monitoring
spec:
  groups:
  - name: blackbox-exporter
    rules:
    - alert: ProbeFailed
      expr: probe_success == 0
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "Probe failed (instance {{ $labels.instance }})"
        description: "Probe failed\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: SlowProbe
      expr: avg_over_time(probe_duration_seconds[1m]) > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Slow probe (instance {{ $labels.instance }})"
        description: "Blackbox probe took more than 1s to complete\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: HttpStatusCode
      expr: probe_http_status_code <= 199 OR probe_http_status_code >= 400
      for: 5m
      labels:
        severity: critical
      annotations:
        summary: "HTTP Status Code (instance {{ $labels.instance }})"
        description: "HTTP status code is not 200-399\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: SSLExpirationChecker
      expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30
      for: 5h
      labels:
        severity: warning
      annotations:
        summary: "SSL certificate will expire soon (instance {{ $labels.instance }})"
        description: "SSL certificate expires in 30 days\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: CheckExpiredSSL
      expr: probe_ssl_earliest_cert_expiry - time()  <= 0
      for: 5h
      labels:
        severity: critical
      annotations:
        summary: "SSL certificate has expired (instance {{ $labels.instance }})"
        description: "SSL certificate has expired already\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: HttpSlowRequests
      expr: avg_over_time(probe_http_duration_seconds[1m]) > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "HTTP slow requests (instance {{ $labels.instance }})"
        description: "HTTP request took more than 1s\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: SlowPing
      expr: avg_over_time(probe_icmp_duration_seconds[1m]) > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "Slow ping (instance {{ $labels.instance }})"
        description: "Blackbox ping took more than 1s\n  VALUE = {{ $value }}\n  LABELS: {{ $labels }}"
    - alert: Alerted
      expr: vector(1)
